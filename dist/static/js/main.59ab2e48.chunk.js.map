{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectsList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectsList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectsList","dashboard_Notifications","react_router","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59ab2e48.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { signOut } from '../../store/actions/authActions'\nimport { connect } from 'react-redux'\n\nconst SignedInLinks = (props) => {\n\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten=1'>\n                {props.profile.initials}\n            </NavLink></li>\n        </ul>\n\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err});\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstname: newUser.firstname,\n                lastname: newUser.lastname,\n                initials: newUser.firstname[0]+ newUser.lastname[0]\n            });\n            }).then(() => {\n                dispatch({ type: 'SIGNUP_SUCCESS'})\n            }).catch((err) => {\n                dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav-wrapper grey darken darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                { links }\n            </div>\n        </nav>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n       <div className=\"section\">\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">\n                                        {item.user}\n                                    </span>\n                                    <span> {item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n            </div>\n        </div>\n       </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectsList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={'/project/'+ project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectsList;\n","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectsList from '../projects/ProjectsList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard  extends Component {\n    render(){\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectsList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc']},\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n    )(Dashboard);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)(ProjectDetails);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (credentials) => dispatch(signIn(credentials))\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstname: '',\n        lastname: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstname\">First Name</label>\n                        <input type=\"text\" id=\"firstname\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastname\">Last Name</label>\n                        <input type=\"text\" id=\"lastname\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: '',\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore  = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstname,\n            authorLastName: profile.lastname,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project})\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n                console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n      ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAlhbergCOsmBoE5jHok16gOCZJefLIR70\",\n    authDomain: \"marioplan-f930a.firebaseapp.com\",\n    databaseURL: \"https://marioplan-f930a.firebaseio.com\",\n    projectId: \"marioplan-f930a\",\n    storageBucket: \"\",\n    messagingSenderId: \"705809517773\",\n    appId: \"1:705809517773:web:b0b371fe9fc919cc\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport  { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, {\n            userProfile: 'users',\n            useFirestoreForProfile: true,\n            attachAuthIsReady: true\n        })\n        )\n    );\n\n// Render content only when auth is ready to avoid flicker of\n// non-logged in user SignedInLinks.\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n});\n\n\n\n"],"sourceRoot":""}